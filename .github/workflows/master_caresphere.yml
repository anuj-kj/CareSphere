name: Build and deploy ASP.Net Core API to Azure Web App - caresphere

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Restore NuGet packages
        run: dotnet restore

      # ✅ FIX: Ignore `.sqlproj` during build
      - name: Build Web API (Ignoring `.sqlproj`)
        run: |
          echo "Building all .csproj files (excluding .sqlproj)..."
          Get-ChildItem -Path . -Recurse -Filter *.csproj | Where-Object { $_.FullName -notmatch '\.sqlproj$' } | ForEach-Object { dotnet build $_.FullName --configuration Release }

      # ✅ FIX: Run Tests (Only Test Projects)
      - name: Run Tests (Only Test Projects)
        run: |
          echo "Running tests without SQL project..."
          Get-ChildItem -Path . -Recurse -Filter *Tests.csproj | ForEach-Object { dotnet test $_.FullName --no-build --configuration Release --verbosity normal }

      - name: dotnet publish
        run: dotnet publish CareSphere.Web.Server/CareSphere.Web.Server.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: web-api
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: web-api

      # ✅ FIX: Preserve React (`/app/`) Before Deploying API
      - name: Preserve React (`/app/`) Before API Deployment
        shell: pwsh
        run: |
          $wwwroot = "D:\home\site\wwwroot"
          $appPath = "$wwwroot\app"
          $tempPath = "D:\home\site\temp-app"

          # If `/app/` exists, move it to a temporary location
          if (Test-Path $appPath) {
              Write-Host "✅ Preserving existing React app (/app/)..."
              Move-Item -Path $appPath -Destination $tempPath -Force
          }

      # ✅ Deploy Web API (Avoid Overwriting `/app/`)
      - name: Deploy Web API
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'caresphere'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.CARESPHERE_PUBLISHPROFILE }}

      # ✅ Restore React (`/app/`) After API Deployment
      - name: Restore React (`/app/`) After API Deployment
        shell: pwsh
        run: |
          $wwwroot = "D:\home\site\wwwroot"
          $appPath = "$wwwroot\app"
          $tempPath = "D:\home\site\temp-app"

          # If the temp `/app/` exists, move it back to `wwwroot`
          if (Test-Path $tempPath) {
              Write-Host "✅ Restoring React app (/app/) after API deployment..."
              Move-Item -Path $tempPath -Destination $appPath -Force
          }
