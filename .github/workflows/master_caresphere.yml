name: Build and deploy ASP.Net Core app to Azure Web App - caresphere

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build all projects (excluding `.sqlproj`)
        run: |
          echo "Finding all .csproj files..."
          Get-ChildItem -Path . -Recurse -Filter *.csproj | ForEach-Object { dotnet build $_.FullName --configuration Release }

      - name: Build Test Projects (Ensures DLLs exist)
        run: |
          echo "Building test projects..."
          Get-ChildItem -Path . -Recurse -Filter *Tests.csproj | ForEach-Object { dotnet build $_.FullName --configuration Debug }

      - name: Run Tests (Using In-Memory Database)
        run: |
          echo "Running tests..."
          Get-ChildItem -Path . -Recurse -Filter *Tests.csproj | ForEach-Object { dotnet test $_.FullName --no-build --verbosity normal }

      - name: dotnet publish
        run: dotnet publish CareSphere.Web.Server/CareSphere.Web.Server.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      # ðŸ›‘ FIX: Preserve existing `wwwroot/` folder before deployment
      - name: Preserve React frontend (`wwwroot`)
        run: |
          if [ -d "/home/site/wwwroot" ]; then
            echo "Preserving existing React app..."
            mkdir -p "${{env.DOTNET_ROOT}}/myapp/wwwroot"
            cp -r /home/site/wwwroot/* "${{env.DOTNET_ROOT}}/myapp/wwwroot/"
          fi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      # ðŸ›‘ FIX: Ensure React remains untouched during deployment
      - name: Merge Web API with existing React frontend
        run: |
          echo "Merging Web API deployment with existing React frontend..."
          mkdir -p /home/site/deploy
          cp -r . /home/site/deploy
          if [ -d "/home/site/wwwroot" ]; then
            cp -r /home/site/wwwroot/* /home/site/deploy/wwwroot/
          fi

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'caresphere'
          slot-name: 'Production'
          package: /home/site/deploy
          publish-profile: ${{ secrets.CARESPHERE_PUBLISHPROFILE }}
