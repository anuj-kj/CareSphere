name: Deploy CareSphere Web API

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build Only C# Projects (Ignoring `.sqlproj`)
        run: |
          echo "Building all .csproj files..."
          Get-ChildItem -Path . -Recurse -Filter *.csproj | Where-Object { $_.FullName -notmatch '\.sqlproj$' } | ForEach-Object { dotnet build $_.FullName --configuration Release }

      - name: Run Tests (Using In-Memory Database)
        run: dotnet test --no-build --verbosity normal

      - name: dotnet publish
        run: dotnet publish CareSphere.Web.Server/CareSphere.Web.Server.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      # âœ… Preserve React (`wwwroot`) Before Deploying API
      - name: Preserve React Frontend (`wwwroot`)
        shell: pwsh
        run: |
          if (Test-Path "D:\home\site\wwwroot") {
            Write-Host "Preserving existing React app..."
            mkdir -p "${{env.DOTNET_ROOT}}/myapp/wwwroot"
            Copy-Item -Path "D:\home\site\wwwroot\*" -Destination "${{env.DOTNET_ROOT}}/myapp/wwwroot" -Recurse -Force
          }

      - name: Upload API Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-api
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download API Artifact
        uses: actions/download-artifact@v4
        with:
          name: web-api

      - name: Deploy Web API to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'caresphere'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.CARESPHERE_PUBLISHPROFILE }}
